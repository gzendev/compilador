#+ Este es un comentario +#

*- Archivo de prueba para el compilador -*
*- Incluye todos los casos de uso y validaciones -*

*- 1. Declaración de variables -*
init {
    a, b, c : Int
    promedio, pi : Float
    mensaje, nombre : String
}

*- 2. Asignaciones simples -*
a := 5
b := 10
pi := 3.14159
mensaje := "Hola mundo"

*- 3. Operaciones aritméticas -*
c := a + b * 2
promedio := (a + b) / 2.0

*- 4. Estructuras de control - IF -*
si (a > b) {
    mensaje := "a es mayor que b"
} sino {
    mensaje := "b es mayor o igual que a"
}

*- 5. Estructuras de control - WHILE -*
mientras (c > 0) {
    c := c - 1
    *- While anidado -*
    mientras (b > a) {
        b := b - 1
    }
}

*- 6. Funciones especiales -*
*- NEGATIVECALC con lista de constantes -*
a := negativeCalculation([1, 2.5, 3, 4.7, 5])

*- SUMFIRSTPRIMES con expresión -*
b := sumFirstPrimes(c + 5)

*- 7. Operadores lógicos -*
si (a > b AND c > 0) {
    mensaje := "Condición AND verdadera"
}

si (a > b OR c > 0) {
    mensaje := "Condición OR verdadera"
}

si (NOT a > b) {
    mensaje := "Condición NOT verdadera"
}

*- 8. Casos de error (comentados) -*

*- Error: Variable no declarada -*
*- x := 10 -*

*- Error: Asignación de tipos incompatibles -*
*- a := "esto es un string" -*
*- mensaje := 42 -*

*- Error: Variable ya declarada -*
*- init {
    a : Int    *- 'a' ya fue declarada -*
} -*

*- Error: Constante entera fuera de rango -*
*- a := 999999999 -*

*- Error: Constante flotante fuera de rango -*
*- pi := 1.23E45 -*

*- Error: Identificador demasiado largo -*
*- esta_variable_tiene_un_nombre_demasiado_largo_que_supera_el_limite := 42 -*

*- Error: String demasiado largo -*
*- mensaje := "Este es un mensaje muy largo que supera el límite de cincuenta caracteres permitidos para strings en nuestro compilador" -*

*- Error: Operación entre tipos incompatibles -*
*- c := mensaje + a -*

*- Error: Comparación entre tipos incompatibles -*
*- si (mensaje > a) { } -*

*- Error: Argumento inválido para SUMFIRSTPRIMES -*
*- c := sumFirstPrimes(3.14) -*  *- Debe ser entero -*

*- 9. Comentarios multilínea -*
*- Este es un comentario
   que ocupa múltiples
   líneas en el código
   fuente -*

*- 10. Expresiones complejas -*
a := (b + c * 2) / (4 - 1)  *- Operaciones anidadas -*
promedio := (a + b + c) / 3.0  *- Conversión implícita a float -*

*- 11. Anidamiento de estructuras de control -*
si (a > 0) {
    mientras (b > 0) {
        si (c > 0) {
            c := c - 1
        } sino {
            b := b - 1
        }
    }
} sino {
    a := 1
}